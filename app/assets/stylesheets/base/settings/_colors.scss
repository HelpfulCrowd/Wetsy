// Default percentage at which lighter and darker versions of colors will be created
$color-lighten-percentage: 7.5% !default;
$color-darken-percentage:  7.5% !default;

// Default colors. Values should be overridden by host project settings
$color-brand-1: #ffffff !default;
$color-brand-2: #ffffff !default;
$color-brand-3: #ffffff !default;
$color-brand-4: #ffffff !default;

$color-primary:   #265cad !default;
$color-secondary: #d3d4d9 !default;
$color-info:      #5bc0eb !default;
$color-success:   #7bc950 !default;
$color-warning:   #ffd131 !default;
$color-danger:    #e4572e !default;

$color-dark:  #343434 !default;
$color-light: #f9f9f9 !default;
$color-pale:  #b7b7b7 !default;

$color-facebook:  #3b5998 !default;
$color-twitter:   #1da1f2 !default;
$color-pinterest: #bd081c !default;

$base-colors: (
  brand-1: $color-brand-1,
  brand-2: $color-brand-2,
  brand-3: $color-brand-3,
  brand-4: $color-brand-4,

  primary:   $color-primary,
  secondary: $color-secondary,
  info:      $color-info,
  success:   $color-success,
  warning:   $color-warning,
  danger:    $color-danger,

  dark:  $color-dark,
  light: $color-light,
  pale:  $color-pale,

  facebook:  $color-facebook,
  twitter:   $color-twitter,
  pinterest: $color-pinterest
);

// $custom-colors is an empty default, allowing host project
// to extend list of avaiable colors by overriding this map
// and putting some key/value pairs inside
$custom-colors: (
  // facebook:  #3b5998,
  // twitter:   #1da1f2,
  // pinterest: #bd081c
) !default;

$all-colors: map-merge($base-colors, $custom-colors);

$colors: ();
@each $key, $value in $all-colors {
  $color: (
    $key: $value
  );
  $colors: map-merge($colors, $color);

  $color--darkened: (
    #{$key}--darkened: darken($value, $color-darken-percentage)
  );
  $colors: map-merge($colors, $color--darkened);

  $color--lightened: (
    #{$key}--lightened: lighten($value, $color-lighten-percentage)
  );
  $colors: map-merge($colors, $color--lightened);
}
